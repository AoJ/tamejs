/* Jison generated parser */
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"String":3,"String1":4,"String2":5,"QUOTE1":6,"StringAtoms":7,"QUOTE2":8,"StringAtom":9,"STRING_ATOM":10,"InnerExprAtom":11,"OuterExprAtom":12,"LABEL":13,"BraceExpr":14,"FunctionDeclaration":15,"InnerExprAtomList":16,"InnerExpr":17,"ParenExpr":18,"LPAREN":19,"RPAREN":20,"BracketExpr":21,"LBRACKET":22,"RBRACKET":23,"LBRACE":24,"RBRACE":25,"GENERIC":26,"COMMA":27,"COLON":28,"ID":29,"THIS":30,"MKEVENT":31,"Expr":32,"ExprStatement":33,"SEMICOLON":34,"SemicolonOpt":35,"Statement":36,"Block":37,"ForStatement":38,"WhileStatement":39,"IfStatement":40,"TwaitStatement":41,"LabeledStatement":42,"ReturnStatement":43,"BreakStatement":44,"ContinueStatement":45,"SwitchStatement":46,"TryStatement":47,"Label":48,"TRY":49,"CatchStatementOpt":50,"FinallyStatementOpt":51,"CATCH":52,"FINALLY":53,"RETURN":54,"CONTINUE":55,"IdOpt":56,"BREAK":57,"SourceElements":58,"FOR":59,"ForIter":60,"WHILE":61,"SWITCH":62,"CaseBlock":63,"Case":64,"CaseLabel":65,"CaseBody":66,"DEFAULT":67,"CASE":68,"IF":69,"ELSE":70,"FUNCTION":71,"ParamListOpt":72,"TWAIT":73,"ParamList":74,"Param":75,"FunctionBody":76,"ShbangOpt":77,"SHBANG":78,"Program":79,"$accept":0,"$end":1},
terminals_: {2:"error",6:"QUOTE1",8:"QUOTE2",10:"STRING_ATOM",13:"LABEL",19:"LPAREN",20:"RPAREN",22:"LBRACKET",23:"RBRACKET",24:"LBRACE",25:"RBRACE",26:"GENERIC",27:"COMMA",28:"COLON",29:"ID",30:"THIS",31:"MKEVENT",34:"SEMICOLON",49:"TRY",52:"CATCH",53:"FINALLY",54:"RETURN",55:"CONTINUE",57:"BREAK",59:"FOR",61:"WHILE",62:"SWITCH",67:"DEFAULT",68:"CASE",69:"IF",70:"ELSE",71:"FUNCTION",73:"TWAIT",78:"SHBANG"},
productions_: [0,[3,1],[3,1],[4,3],[5,3],[9,1],[7,0],[7,2],[11,1],[11,1],[11,1],[11,1],[16,0],[16,2],[17,1],[18,3],[21,3],[14,3],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[32,0],[32,2],[33,2],[33,1],[35,0],[35,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,1],[36,1],[48,1],[42,2],[47,4],[50,0],[50,5],[51,0],[51,2],[43,3],[45,3],[44,3],[37,3],[58,0],[58,2],[38,5],[39,5],[46,7],[63,0],[63,2],[64,2],[65,2],[65,2],[65,3],[66,1],[40,5],[40,7],[60,5],[60,1],[15,6],[41,2],[56,0],[56,1],[74,1],[74,3],[75,1],[72,0],[72,1],[76,1],[77,0],[77,1],[79,2]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: this.$ = $$[$0]; 
break;
case 2: this.$ = $$[$0]; 
break;
case 3: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, "'" + $$[$0-1] + "'"); 
break;
case 4: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, '"' + $$[$0-1] + '"'); 
break;
case 5: this.$ = yytext; 
break;
case 6: this.$ = ""; 
break;
case 7: this.$ = $$[$0-1] + $$[$0]; 
break;
case 8: this.$ = $$[$0]; 
break;
case 9: this.$ = [ new yy.Atom (_$[$0].first_line, yytext + " :")]; 
break;
case 10: this.$ = $$[$0]; 
break;
case 11: this.$ = [ $$[$0] ]; 
break;
case 12: this.$ = []; 
break;
case 13: this.$ = $$[$0-1].concat ($$[$0]); 
break;
case 14: this.$ = new yy.Expr ($$[$0]); 
break;
case 15: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '(') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, ')'));
	 this.$ = out;
     
break;
case 16: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '[') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, ']'));
	 this.$ = out;
     
break;
case 17: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '{') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, '}'));
	 this.$ = out;
     
break;
case 18: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 19: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 20: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 21: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 22: this.$ = $$[$0]; 
break;
case 23: this.$ = $$[$0]; 
break;
case 24: this.$ = $$[$0]; 
break;
case 25: this.$ = [ new yy.ThisExpr (_$[$0].first_line) ]; 
break;
case 26: this.$ = [ new yy.Atom (_$[$0].first_line, "__tame_ev.mkevent") ] ; 
break;
case 27: this.$ = new yy.Expr ([]); 
break;
case 28:
	 var lst = $$[$0-1].concat ($$[$0]);
	 this.$ = new yy.Expr (lst);
     
break;
case 29: 
         $$[$0-1].addAtom (new yy.Atom (_$[$0].first_line, ";")); 
	 this.$ = $$[$0-1]; 
     
break;
case 30:
         this.$ = yy.Expr ([ $$[$0] ] );
     
break;
case 45: this.$ = new yy.Label (_$[$0].first_line, yytext); 
break;
case 46:
         $$[$0].setLabel ($$[$0-1]);
	 this.$ = $$[$0];
     
break;
case 47:
	  this.$ = new yy.TryStatement (_$[$0-3].first_line, $$[$0-2], $$[$0-1], $$[$0]);
     
break;
case 48: this.$ = null; 
break;
case 49:
         this.$ = new yy.CatchStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 50: this.$ = null; 
break;
case 51:
         this.$ = $$[$0];
     
break;
case 52:
         this.$ = new yy.ReturnStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 53:
         this.$ = new yy.ContinueStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 54:
         this.$ = new yy.BreakStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 55: this.$ = new yy.Block (_$[$0-2].first_line, $$[$0-1]); 
break;
case 56: this.$ = []; 
break;
case 57: $$[$0-1].push ($$[$0]); this.$ = $$[$0-1]; 
break;
case 58:
        this.$ = new yy.ForStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 59:
        this.$ = new yy.WhileStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 60:
         this.$ = new yy.SwitchStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-1]);
     
break;
case 61: this.$ = []; 
break;
case 62:
         $$[$0-1].push ($$[$0]);
	 this.$ = $$[$0-1];
     
break;
case 63:
         $$[$0-1].addBody (_$[$0-1].first_line, $$[$0]);
	 this.$ = $$[$0-1];
     
break;
case 64: this.$ = yy.Case (_$[$0-1].first_line); 
break;
case 65: this.$ = yy.Case (_$[$0-1].first_line, $$[$0]); 
break;
case 66: this.$ = yy.Case (_$[$0-2].first_line, $$[$0-1]); 
break;
case 67: this.$ = $$[$0]; 
break;
case 68:
        this.$ = new yy.IfElseStatement (_$[$0-4].first_line, $$[$0-2], $$[$0], null);
     
break;
case 69:
        this.$ = new yy.IfElseStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 70:
         this.$ = new yy.ForIterClassic ($$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 71:
         this.$ = new yy.ForIterEach ($$[$0]); 
     
break;
case 72:
         this.$ = new yy.FunctionDeclaration (_$[$0-5].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 73:
        this.$ = new yy.TwaitStatement (_$[$0-1].first_line, $$[$0]);
     
break;
case 75: this.$ = yytext; 
break;
case 76: this.$ = [ $$[$0] ]; 
break;
case 77: $$[$0-2].push ($$[$0]); this.$ = $$[$0-2]; 
break;
case 78: this.$ = yytext; 
break;
case 79: this.$ = []; 
break;
case 82: this.$ = null; 
break;
case 83: this.$ = $$[$0]; 
break;
case 84: yy.output = new yy.Program ($$[$0-1], $$[$0]); 
break;
}
},
table: [{1:[2,82],6:[2,82],8:[2,82],13:[2,82],19:[2,82],22:[2,82],24:[2,82],26:[2,82],27:[2,82],28:[2,82],29:[2,82],30:[2,82],31:[2,82],34:[2,82],49:[2,82],54:[2,82],55:[2,82],57:[2,82],59:[2,82],61:[2,82],62:[2,82],69:[2,82],71:[2,82],73:[2,82],77:2,78:[1,3],79:1},{1:[3]},{1:[2,56],6:[2,56],8:[2,56],13:[2,56],19:[2,56],22:[2,56],24:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],30:[2,56],31:[2,56],34:[2,56],49:[2,56],54:[2,56],55:[2,56],57:[2,56],58:4,59:[2,56],61:[2,56],62:[2,56],69:[2,56],71:[2,56],73:[2,56]},{1:[2,83],6:[2,83],8:[2,83],13:[2,83],19:[2,83],22:[2,83],24:[2,83],26:[2,83],27:[2,83],28:[2,83],29:[2,83],30:[2,83],31:[2,83],34:[2,83],49:[2,83],54:[2,83],55:[2,83],57:[2,83],59:[2,83],61:[2,83],62:[2,83],69:[2,83],71:[2,83],73:[2,83]},{1:[2,84],3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:5,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{1:[2,57],6:[2,57],8:[2,57],13:[2,57],19:[2,57],22:[2,57],24:[2,57],25:[2,57],26:[2,57],27:[2,57],28:[2,57],29:[2,57],30:[2,57],31:[2,57],34:[2,57],49:[2,57],54:[2,57],55:[2,57],57:[2,57],59:[2,57],61:[2,57],62:[2,57],67:[2,57],68:[2,57],69:[2,57],71:[2,57],73:[2,57]},{1:[2,33],6:[2,33],8:[2,33],13:[2,33],19:[2,33],22:[2,33],24:[2,33],25:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],30:[2,33],31:[2,33],34:[2,33],49:[2,33],54:[2,33],55:[2,33],57:[2,33],59:[2,33],61:[2,33],62:[2,33],67:[2,33],68:[2,33],69:[2,33],70:[2,33],71:[2,33],73:[2,33]},{1:[2,34],6:[2,34],8:[2,34],13:[2,34],19:[2,34],22:[2,34],24:[2,34],25:[2,34],26:[2,34],27:[2,34],28:[2,34],29:[2,34],30:[2,34],31:[2,34],34:[2,34],49:[2,34],54:[2,34],55:[2,34],57:[2,34],59:[2,34],61:[2,34],62:[2,34],67:[2,34],68:[2,34],69:[2,34],70:[2,34],71:[2,34],73:[2,34]},{1:[2,35],6:[2,35],8:[2,35],13:[2,35],19:[2,35],22:[2,35],24:[2,35],25:[2,35],26:[2,35],27:[2,35],28:[2,35],29:[2,35],30:[2,35],31:[2,35],34:[2,35],49:[2,35],54:[2,35],55:[2,35],57:[2,35],59:[2,35],61:[2,35],62:[2,35],67:[2,35],68:[2,35],69:[2,35],70:[2,35],71:[2,35],73:[2,35]},{1:[2,36],6:[2,36],8:[2,36],13:[2,36],19:[2,36],22:[2,36],24:[2,36],25:[2,36],26:[2,36],27:[2,36],28:[2,36],29:[2,36],30:[2,36],31:[2,36],34:[2,36],49:[2,36],54:[2,36],55:[2,36],57:[2,36],59:[2,36],61:[2,36],62:[2,36],67:[2,36],68:[2,36],69:[2,36],70:[2,36],71:[2,36],73:[2,36]},{1:[2,37],6:[2,37],8:[2,37],13:[2,37],19:[2,37],22:[2,37],24:[2,37],25:[2,37],26:[2,37],27:[2,37],28:[2,37],29:[2,37],30:[2,37],31:[2,37],34:[2,37],49:[2,37],54:[2,37],55:[2,37],57:[2,37],59:[2,37],61:[2,37],62:[2,37],67:[2,37],68:[2,37],69:[2,37],70:[2,37],71:[2,37],73:[2,37]},{1:[2,38],6:[2,38],8:[2,38],13:[2,38],19:[2,38],22:[2,38],24:[2,38],25:[2,38],26:[2,38],27:[2,38],28:[2,38],29:[2,38],30:[2,38],31:[2,38],34:[2,38],49:[2,38],54:[2,38],55:[2,38],57:[2,38],59:[2,38],61:[2,38],62:[2,38],67:[2,38],68:[2,38],69:[2,38],70:[2,38],71:[2,38],73:[2,38]},{1:[2,39],6:[2,39],8:[2,39],13:[2,39],19:[2,39],22:[2,39],24:[2,39],25:[2,39],26:[2,39],27:[2,39],28:[2,39],29:[2,39],30:[2,39],31:[2,39],34:[2,39],49:[2,39],54:[2,39],55:[2,39],57:[2,39],59:[2,39],61:[2,39],62:[2,39],67:[2,39],68:[2,39],69:[2,39],70:[2,39],71:[2,39],73:[2,39]},{1:[2,40],6:[2,40],8:[2,40],13:[2,40],19:[2,40],22:[2,40],24:[2,40],25:[2,40],26:[2,40],27:[2,40],28:[2,40],29:[2,40],30:[2,40],31:[2,40],34:[2,40],49:[2,40],54:[2,40],55:[2,40],57:[2,40],59:[2,40],61:[2,40],62:[2,40],67:[2,40],68:[2,40],69:[2,40],70:[2,40],71:[2,40],73:[2,40]},{1:[2,41],6:[2,41],8:[2,41],13:[2,41],19:[2,41],22:[2,41],24:[2,41],25:[2,41],26:[2,41],27:[2,41],28:[2,41],29:[2,41],30:[2,41],31:[2,41],34:[2,41],49:[2,41],54:[2,41],55:[2,41],57:[2,41],59:[2,41],61:[2,41],62:[2,41],67:[2,41],68:[2,41],69:[2,41],70:[2,41],71:[2,41],73:[2,41]},{1:[2,42],6:[2,42],8:[2,42],13:[2,42],19:[2,42],22:[2,42],24:[2,42],25:[2,42],26:[2,42],27:[2,42],28:[2,42],29:[2,42],30:[2,42],31:[2,42],34:[2,42],49:[2,42],54:[2,42],55:[2,42],57:[2,42],59:[2,42],61:[2,42],62:[2,42],67:[2,42],68:[2,42],69:[2,42],70:[2,42],71:[2,42],73:[2,42]},{1:[2,43],6:[2,43],8:[2,43],13:[2,43],19:[2,43],22:[2,43],24:[2,43],25:[2,43],26:[2,43],27:[2,43],28:[2,43],29:[2,43],30:[2,43],31:[2,43],34:[2,43],49:[2,43],54:[2,43],55:[2,43],57:[2,43],59:[2,43],61:[2,43],62:[2,43],67:[2,43],68:[2,43],69:[2,43],70:[2,43],71:[2,43],73:[2,43]},{1:[2,44],6:[2,44],8:[2,44],13:[2,44],19:[2,44],22:[2,44],24:[2,44],25:[2,44],26:[2,44],27:[2,44],28:[2,44],29:[2,44],30:[2,44],31:[2,44],34:[2,44],49:[2,44],54:[2,44],55:[2,44],57:[2,44],59:[2,44],61:[2,44],62:[2,44],67:[2,44],68:[2,44],69:[2,44],70:[2,44],71:[2,44],73:[2,44]},{6:[2,56],8:[2,56],13:[2,56],19:[2,56],22:[2,56],24:[2,56],25:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],30:[2,56],31:[2,56],34:[2,56],49:[2,56],54:[2,56],55:[2,56],57:[2,56],58:49,59:[2,56],61:[2,56],62:[2,56],69:[2,56],71:[2,56],73:[2,56]},{34:[1,50]},{1:[2,30],6:[2,30],8:[2,30],13:[2,30],19:[2,30],22:[2,30],24:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],30:[2,30],31:[2,30],34:[2,30],49:[2,30],54:[2,30],55:[2,30],57:[2,30],59:[2,30],61:[2,30],62:[2,30],67:[2,30],68:[2,30],69:[2,30],70:[2,30],71:[2,30],73:[2,30]},{19:[1,51]},{19:[1,52]},{19:[1,53]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:54,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:55,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{6:[2,12],8:[2,12],13:[2,12],16:57,17:56,19:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],34:[2,12],71:[2,12]},{29:[1,59],34:[2,74],56:58},{29:[1,59],34:[2,74],56:60},{19:[1,61]},{24:[1,18],37:62},{6:[2,12],8:[2,12],13:[2,12],16:63,19:[2,12],20:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],34:[2,12],71:[2,12]},{19:[2,74],29:[1,59],56:64},{6:[2,45],8:[2,45],13:[2,45],19:[2,45],22:[2,45],24:[2,45],26:[2,45],27:[2,45],28:[2,45],29:[2,45],30:[2,45],31:[2,45],34:[2,45],49:[2,45],54:[2,45],55:[2,45],57:[2,45],59:[2,45],61:[2,45],62:[2,45],69:[2,45],71:[2,45],73:[2,45]},{6:[2,18],8:[2,18],13:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],24:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],30:[2,18],31:[2,18],34:[2,18],71:[2,18]},{6:[2,19],8:[2,19],13:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],24:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],30:[2,19],31:[2,19],34:[2,19],71:[2,19]},{6:[2,20],8:[2,20],13:[2,20],19:[2,20],20:[2,20],22:[2,20],23:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],30:[2,20],31:[2,20],34:[2,20],71:[2,20]},{6:[2,21],8:[2,21],13:[2,21],19:[2,21],20:[2,21],22:[2,21],23:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],30:[2,21],31:[2,21],34:[2,21],71:[2,21]},{6:[2,22],8:[2,22],13:[2,22],19:[2,22],20:[2,22],22:[2,22],23:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],30:[2,22],31:[2,22],34:[2,22],71:[2,22]},{6:[2,23],8:[2,23],13:[2,23],19:[2,23],20:[2,23],22:[2,23],23:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],30:[2,23],31:[2,23],34:[2,23],71:[2,23]},{6:[2,24],8:[2,24],13:[2,24],19:[2,24],20:[2,24],22:[2,24],23:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],30:[2,24],31:[2,24],34:[2,24],71:[2,24]},{6:[2,25],8:[2,25],13:[2,25],19:[2,25],20:[2,25],22:[2,25],23:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],30:[2,25],31:[2,25],34:[2,25],71:[2,25]},{6:[2,26],8:[2,26],13:[2,26],19:[2,26],20:[2,26],22:[2,26],23:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],30:[2,26],31:[2,26],34:[2,26],71:[2,26]},{6:[2,1],8:[2,1],13:[2,1],19:[2,1],20:[2,1],22:[2,1],23:[2,1],24:[2,1],25:[2,1],26:[2,1],27:[2,1],28:[2,1],29:[2,1],30:[2,1],31:[2,1],34:[2,1],71:[2,1]},{6:[2,2],8:[2,2],13:[2,2],19:[2,2],20:[2,2],22:[2,2],23:[2,2],24:[2,2],25:[2,2],26:[2,2],27:[2,2],28:[2,2],29:[2,2],30:[2,2],31:[2,2],34:[2,2],71:[2,2]},{6:[2,12],8:[2,12],13:[2,12],16:57,17:65,19:[2,12],20:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],71:[2,12]},{6:[2,12],8:[2,12],13:[2,12],16:57,17:66,19:[2,12],22:[2,12],23:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],71:[2,12]},{6:[2,6],7:67,10:[2,6]},{7:68,8:[2,6],10:[2,6]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],25:[1,69],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:5,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{1:[2,29],6:[2,29],8:[2,29],13:[2,29],19:[2,29],22:[2,29],24:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],30:[2,29],31:[2,29],34:[2,29],49:[2,29],54:[2,29],55:[2,29],57:[2,29],59:[2,29],61:[2,29],62:[2,29],67:[2,29],68:[2,29],69:[2,29],70:[2,29],71:[2,29],73:[2,29]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,18:39,19:[1,45],20:[2,27],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:71,34:[2,27],60:70},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,18:39,19:[1,45],20:[2,27],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:72},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,18:39,19:[1,45],20:[2,27],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:73},{1:[2,73],6:[2,73],8:[2,73],13:[2,73],19:[2,73],22:[2,73],24:[2,73],25:[2,73],26:[2,73],27:[2,73],28:[2,73],29:[2,73],30:[2,73],31:[2,73],34:[2,73],49:[2,73],54:[2,73],55:[2,73],57:[2,73],59:[2,73],61:[2,73],62:[2,73],67:[2,73],68:[2,73],69:[2,73],70:[2,73],71:[2,73],73:[2,73]},{1:[2,46],6:[2,46],8:[2,46],13:[2,46],19:[2,46],22:[2,46],24:[2,46],25:[2,46],26:[2,46],27:[2,46],28:[2,46],29:[2,46],30:[2,46],31:[2,46],34:[2,46],49:[2,46],54:[2,46],55:[2,46],57:[2,46],59:[2,46],61:[2,46],62:[2,46],67:[2,46],68:[2,46],69:[2,46],70:[2,46],71:[2,46],73:[2,46]},{34:[1,74]},{3:38,4:43,5:44,6:[1,47],8:[1,48],11:75,12:76,13:[1,77],14:78,15:79,18:39,19:[1,45],20:[2,14],21:40,22:[1,46],23:[2,14],24:[1,80],25:[2,14],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],34:[2,14],71:[1,32]},{34:[1,81]},{19:[2,75],34:[2,75]},{34:[1,82]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,18:39,19:[1,45],20:[2,27],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:83},{1:[2,48],6:[2,48],8:[2,48],13:[2,48],19:[2,48],22:[2,48],24:[2,48],25:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],30:[2,48],31:[2,48],34:[2,48],49:[2,48],50:84,52:[1,85],53:[2,48],54:[2,48],55:[2,48],57:[2,48],59:[2,48],61:[2,48],62:[2,48],67:[2,48],68:[2,48],69:[2,48],70:[2,48],71:[2,48],73:[2,48]},{3:38,4:43,5:44,6:[1,47],8:[1,48],11:75,12:76,13:[1,77],14:78,15:79,18:39,19:[1,45],20:[2,28],21:40,22:[1,46],24:[1,80],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],34:[2,28],71:[1,32]},{19:[1,86]},{20:[1,87]},{23:[1,88]},{6:[1,89],10:[1,90]},{8:[1,91],10:[1,90]},{1:[2,55],6:[2,55],8:[2,55],13:[2,55],19:[2,55],20:[2,55],22:[2,55],23:[2,55],24:[2,55],25:[2,55],26:[2,55],27:[2,55],28:[2,55],29:[2,55],30:[2,55],31:[2,55],34:[2,55],49:[2,55],52:[2,55],53:[2,55],54:[2,55],55:[2,55],57:[2,55],59:[2,55],61:[2,55],62:[2,55],67:[2,55],68:[2,55],69:[2,55],70:[2,55],71:[2,55],73:[2,55]},{20:[1,92]},{20:[2,71],34:[1,93]},{20:[1,94]},{20:[1,95]},{1:[2,52],6:[2,52],8:[2,52],13:[2,52],19:[2,52],22:[2,52],24:[2,52],25:[2,52],26:[2,52],27:[2,52],28:[2,52],29:[2,52],30:[2,52],31:[2,52],34:[2,52],49:[2,52],54:[2,52],55:[2,52],57:[2,52],59:[2,52],61:[2,52],62:[2,52],67:[2,52],68:[2,52],69:[2,52],70:[2,52],71:[2,52],73:[2,52]},{6:[2,13],8:[2,13],13:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],24:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],30:[2,13],31:[2,13],34:[2,13],71:[2,13]},{6:[2,8],8:[2,8],13:[2,8],19:[2,8],20:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],30:[2,8],31:[2,8],34:[2,8],71:[2,8]},{6:[2,9],8:[2,9],13:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],24:[2,9],25:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9],30:[2,9],31:[2,9],34:[2,9],71:[2,9]},{6:[2,10],8:[2,10],13:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],24:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],30:[2,10],31:[2,10],34:[2,10],71:[2,10]},{6:[2,11],8:[2,11],13:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],24:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],30:[2,11],31:[2,11],34:[2,11],71:[2,11]},{6:[2,12],8:[2,12],13:[2,12],16:57,17:96,19:[2,12],22:[2,12],24:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],71:[2,12]},{1:[2,54],6:[2,54],8:[2,54],13:[2,54],19:[2,54],22:[2,54],24:[2,54],25:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],30:[2,54],31:[2,54],34:[2,54],49:[2,54],54:[2,54],55:[2,54],57:[2,54],59:[2,54],61:[2,54],62:[2,54],67:[2,54],68:[2,54],69:[2,54],70:[2,54],71:[2,54],73:[2,54]},{1:[2,53],6:[2,53],8:[2,53],13:[2,53],19:[2,53],22:[2,53],24:[2,53],25:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],30:[2,53],31:[2,53],34:[2,53],49:[2,53],54:[2,53],55:[2,53],57:[2,53],59:[2,53],61:[2,53],62:[2,53],67:[2,53],68:[2,53],69:[2,53],70:[2,53],71:[2,53],73:[2,53]},{20:[1,97]},{1:[2,50],6:[2,50],8:[2,50],13:[2,50],19:[2,50],22:[2,50],24:[2,50],25:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],30:[2,50],31:[2,50],34:[2,50],49:[2,50],51:98,53:[1,99],54:[2,50],55:[2,50],57:[2,50],59:[2,50],61:[2,50],62:[2,50],67:[2,50],68:[2,50],69:[2,50],70:[2,50],71:[2,50],73:[2,50]},{19:[1,100]},{20:[2,79],29:[1,104],72:101,74:102,75:103},{6:[2,15],8:[2,15],13:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],24:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],30:[2,15],31:[2,15],34:[2,15],71:[2,15]},{6:[2,16],8:[2,16],13:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],24:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],30:[2,16],31:[2,16],34:[2,16],71:[2,16]},{6:[2,3],8:[2,3],13:[2,3],19:[2,3],20:[2,3],22:[2,3],23:[2,3],24:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],30:[2,3],31:[2,3],34:[2,3],71:[2,3]},{6:[2,7],8:[2,7],10:[2,7]},{6:[2,4],8:[2,4],13:[2,4],19:[2,4],20:[2,4],22:[2,4],23:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],30:[2,4],31:[2,4],34:[2,4],71:[2,4]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:105,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,18:39,19:[1,45],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:106,34:[2,27]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:107,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:108,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{25:[1,109]},{24:[1,110]},{1:[2,47],6:[2,47],8:[2,47],13:[2,47],19:[2,47],22:[2,47],24:[2,47],25:[2,47],26:[2,47],27:[2,47],28:[2,47],29:[2,47],30:[2,47],31:[2,47],34:[2,47],49:[2,47],54:[2,47],55:[2,47],57:[2,47],59:[2,47],61:[2,47],62:[2,47],67:[2,47],68:[2,47],69:[2,47],70:[2,47],71:[2,47],73:[2,47]},{24:[1,18],37:111},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,18:39,19:[1,45],20:[2,27],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:112},{20:[1,113]},{20:[2,80],27:[1,114]},{20:[2,76],27:[2,76]},{20:[2,78],27:[2,78]},{1:[2,58],6:[2,58],8:[2,58],13:[2,58],19:[2,58],22:[2,58],24:[2,58],25:[2,58],26:[2,58],27:[2,58],28:[2,58],29:[2,58],30:[2,58],31:[2,58],34:[2,58],49:[2,58],54:[2,58],55:[2,58],57:[2,58],59:[2,58],61:[2,58],62:[2,58],67:[2,58],68:[2,58],69:[2,58],70:[2,58],71:[2,58],73:[2,58]},{34:[1,115]},{1:[2,59],6:[2,59],8:[2,59],13:[2,59],19:[2,59],22:[2,59],24:[2,59],25:[2,59],26:[2,59],27:[2,59],28:[2,59],29:[2,59],30:[2,59],31:[2,59],34:[2,59],49:[2,59],54:[2,59],55:[2,59],57:[2,59],59:[2,59],61:[2,59],62:[2,59],67:[2,59],68:[2,59],69:[2,59],70:[2,59],71:[2,59],73:[2,59]},{1:[2,68],6:[2,68],8:[2,68],13:[2,68],19:[2,68],22:[2,68],24:[2,68],25:[2,68],26:[2,68],27:[2,68],28:[2,68],29:[2,68],30:[2,68],31:[2,68],34:[2,68],49:[2,68],54:[2,68],55:[2,68],57:[2,68],59:[2,68],61:[2,68],62:[2,68],67:[2,68],68:[2,68],69:[2,68],70:[1,116],71:[2,68],73:[2,68]},{6:[2,17],8:[2,17],13:[2,17],19:[2,17],20:[2,17],22:[2,17],23:[2,17],24:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],30:[2,17],31:[2,17],34:[2,17],71:[2,17]},{25:[2,61],63:117,67:[2,61],68:[2,61]},{1:[2,51],6:[2,51],8:[2,51],13:[2,51],19:[2,51],22:[2,51],24:[2,51],25:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],30:[2,51],31:[2,51],34:[2,51],49:[2,51],54:[2,51],55:[2,51],57:[2,51],59:[2,51],61:[2,51],62:[2,51],67:[2,51],68:[2,51],69:[2,51],70:[2,51],71:[2,51],73:[2,51]},{20:[1,118]},{24:[1,18],37:119},{29:[1,104],75:120},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,18:39,19:[1,45],20:[2,27],21:40,22:[1,46],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:121},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:122,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],69:[1,23],71:[1,32],73:[1,24]},{25:[1,123],64:124,65:125,67:[1,126],68:[1,127]},{24:[1,18],37:128},{1:[2,72],6:[2,72],8:[2,72],13:[2,72],19:[2,72],20:[2,72],22:[2,72],23:[2,72],24:[2,72],25:[2,72],26:[2,72],27:[2,72],28:[2,72],29:[2,72],30:[2,72],31:[2,72],34:[2,72],49:[2,72],54:[2,72],55:[2,72],57:[2,72],59:[2,72],61:[2,72],62:[2,72],67:[2,72],68:[2,72],69:[2,72],70:[2,72],71:[2,72],73:[2,72]},{20:[2,77],27:[2,77]},{20:[2,70]},{1:[2,69],6:[2,69],8:[2,69],13:[2,69],19:[2,69],22:[2,69],24:[2,69],25:[2,69],26:[2,69],27:[2,69],28:[2,69],29:[2,69],30:[2,69],31:[2,69],34:[2,69],49:[2,69],54:[2,69],55:[2,69],57:[2,69],59:[2,69],61:[2,69],62:[2,69],67:[2,69],68:[2,69],69:[2,69],70:[2,69],71:[2,69],73:[2,69]},{1:[2,60],6:[2,60],8:[2,60],13:[2,60],19:[2,60],22:[2,60],24:[2,60],25:[2,60],26:[2,60],27:[2,60],28:[2,60],29:[2,60],30:[2,60],31:[2,60],34:[2,60],49:[2,60],54:[2,60],55:[2,60],57:[2,60],59:[2,60],61:[2,60],62:[2,60],67:[2,60],68:[2,60],69:[2,60],70:[2,60],71:[2,60],73:[2,60]},{25:[2,62],67:[2,62],68:[2,62]},{6:[2,56],8:[2,56],13:[2,56],19:[2,56],22:[2,56],24:[2,56],25:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],30:[2,56],31:[2,56],34:[2,56],49:[2,56],54:[2,56],55:[2,56],57:[2,56],58:130,59:[2,56],61:[2,56],62:[2,56],66:129,67:[2,56],68:[2,56],69:[2,56],71:[2,56],73:[2,56]},{28:[1,131]},{3:133,4:43,5:44,6:[1,47],8:[1,48],13:[1,132]},{1:[2,49],6:[2,49],8:[2,49],13:[2,49],19:[2,49],22:[2,49],24:[2,49],25:[2,49],26:[2,49],27:[2,49],28:[2,49],29:[2,49],30:[2,49],31:[2,49],34:[2,49],49:[2,49],53:[2,49],54:[2,49],55:[2,49],57:[2,49],59:[2,49],61:[2,49],62:[2,49],67:[2,49],68:[2,49],69:[2,49],70:[2,49],71:[2,49],73:[2,49]},{25:[2,63],67:[2,63],68:[2,63]},{3:38,4:43,5:44,6:[1,47],8:[1,48],12:31,13:[1,33],15:20,18:39,19:[1,45],21:40,22:[1,46],24:[1,18],25:[2,67],26:[1,34],27:[1,35],28:[1,36],29:[1,37],30:[1,41],31:[1,42],32:19,33:7,34:[2,27],36:5,37:6,38:8,39:9,40:10,41:11,42:12,43:13,44:14,45:15,46:16,47:17,48:25,49:[1,30],54:[1,26],55:[1,28],57:[1,27],59:[1,21],61:[1,22],62:[1,29],67:[2,67],68:[2,67],69:[1,23],71:[1,32],73:[1,24]},{6:[2,64],8:[2,64],13:[2,64],19:[2,64],22:[2,64],24:[2,64],25:[2,64],26:[2,64],27:[2,64],28:[2,64],29:[2,64],30:[2,64],31:[2,64],34:[2,64],49:[2,64],54:[2,64],55:[2,64],57:[2,64],59:[2,64],61:[2,64],62:[2,64],67:[2,64],68:[2,64],69:[2,64],71:[2,64],73:[2,64]},{6:[2,65],8:[2,65],13:[2,65],19:[2,65],22:[2,65],24:[2,65],25:[2,65],26:[2,65],27:[2,65],28:[2,65],29:[2,65],30:[2,65],31:[2,65],34:[2,65],49:[2,65],54:[2,65],55:[2,65],57:[2,65],59:[2,65],61:[2,65],62:[2,65],67:[2,65],68:[2,65],69:[2,65],71:[2,65],73:[2,65]},{28:[1,134]},{6:[2,66],8:[2,66],13:[2,66],19:[2,66],22:[2,66],24:[2,66],25:[2,66],26:[2,66],27:[2,66],28:[2,66],29:[2,66],30:[2,66],31:[2,66],34:[2,66],49:[2,66],54:[2,66],55:[2,66],57:[2,66],59:[2,66],61:[2,66],62:[2,66],67:[2,66],68:[2,66],69:[2,66],71:[2,66],73:[2,66]}],
defaultActions: {121:[2,70]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};/* Jison generated lexer */
var lexer = (function(){var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parseError) {
            this.yy.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext+=ch;
        this.yyleng++;
        this.match+=ch;
        this.matched+=ch;
        var lines = ch.match(/\n/);
        if (lines) this.yylineno++;
        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        this._input = ch + this._input;
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            match = this._input.match(this.rules[rules[i]]);
            if (match) {
                lines = match[0].match(/\n.*/g);
                if (lines) this.yylineno += lines.length;
                this.yylloc = {first_line: this.yylloc.last_line,
                               last_line: this.yylineno+1,
                               first_column: this.yylloc.last_column,
                               last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                this._more = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, rules[i],this.conditionStack[this.conditionStack.length-1]);
                if (token) return token;
                else return;
            }
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(), 
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    }});
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:/* skip over C++-style comments */
break;
case 1:/* skip space */
break;
case 2:return 59;
break;
case 3:return 61; 
break;
case 4:return 57;
break;
case 5:return 55;
break;
case 6:return 54;
break;
case 7:return 'DO';
break;
case 8:return 69;
break;
case 9:return 70;
break;
case 10:return 49;
break;
case 11:return 52;
break;
case 12:return 73;
break;
case 13:return 71;
break;
case 14:return 31;
break;
case 15:return 53;
break;
case 16:return 68;
break;
case 17:return 62;
break;
case 18:return 67;
break;
case 19:return 30;
break;
case 20:return 78; 
break;
case 21: 
                                   yy_.yytext = yy_.yytext.replace (/[\s:]/g, ""); 
				   return 13; 
                              
break;
case 22: return 29; 
break;
case 23:return 24;
break;
case 24:return 25;
break;
case 25:return 19;
break;
case 26:return 20;
break;
case 27:return 22;
break;
case 28:return 23;
break;
case 29:return "SEMICOLON";
break;
case 30:return 27;
break;
case 31:return 28;
break;
case 32: this.begin ('ST_QUOTE2'); return 8; 
break;
case 33: this.begin ('ST_QUOTE1'); return 6; 
break;
case 34: this.begin ('ST_COMMENT'); 
break;
case 35:return 26;
break;
case 36:return 26;
break;
case 37:return 10;
break;
case 38:return 10;
break;
case 39: this.popState (); return "QUOTE2"; 
break;
case 40:return 'ENDOFFILE';
break;
case 41:return 10;
break;
case 42:return 10;
break;
case 43: this.popState (); return "QUOTE1"; 
break;
case 44:return 'ENDOFFILE';
break;
case 45: this.popState(); 
break;
case 46:/* ignore */
break;
case 47:/* ignore */
break;
case 48:return 'ENDOFFILE';
break;
}
};
lexer.rules = [/^\/\/.*/,/^\s+/,/^for\b/,/^while\b/,/^break\b/,/^continue\b/,/^return\b/,/^do\b/,/^if\b/,/^else\b/,/^try\b/,/^catch\b/,/^twait\b/,/^function\b/,/^mkevent\b/,/^finally\b/,/^case\b/,/^switch\b/,/^default\b/,/^this\b/,/^#![ ]*[/].*/,/^[a-zA-Z_0-9]+[ ^]*[:]/,/^[a-zA-Z_][a-zA-Z_0-9]*/,/^\{/,/^\}/,/^\(/,/^\)/,/^\[/,/^\]/,/^;/,/^,/,/^:/,/^"/,/^'/,/^\/\*/,/^[^/{}()\[\];,:"'\s]+/,/^./,/^\\./,/^[^\\"]+/,/^"/,/^$/,/^\\./,/^[^\\']+/,/^'/,/^$/,/^\*\//,/^\*/,/^[^*]+/,/^$/];
lexer.conditions = {"ST_QUOTE2":{"rules":[37,38,39,40],"inclusive":true},"ST_QUOTE1":{"rules":[41,42,43,44],"inclusive":true},"ST_COMMENT":{"rules":[45,46,47,48],"inclusive":true},"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"inclusive":true}};return lexer;})()
parser.lexer = lexer;
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}