// -*- mode: javascript; tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil; -*-
var assert = require ("assert");

var results = [];

function blah (ev) { 
    await { setTimeout (pledge (), 10*Math.random ()); }
    ev(); 
};

function runsw (x, cb) {
    
    switch (x) {
    case 0:
	    await { blah (pledge ()); }
	    results.push (0);
	    break;
    case 17:
    case 1:
	    await { blah (pledge ()); }
	    results.push (1);
	    break;
    case 2:
	    await { blah (pledge ()); }
	    results.push (2);
    case 18:
    case 3:
	    await { blah (pledge ()); }
	    results.push (3);
    default:
	    await { blah (pledge ()); }
	    results.push (4);
	    break;
    }
    cb ();
}

exports["switch & case statement"] = {
    
    run : function (cb) {
	    var lst = [ 0, 1, 2, 3, 4, 18, 17];
	    for (var i in lst) {
	        await { runsw (lst[i], pledge ()); }
	    }
	    cb ();
    },
    
    check : function () {
	    assert.deepEqual (results, [0,1,2,3,4,3,4,4,3,4,1], "cascade check");
    }
    
};
