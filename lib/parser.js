/* Jison generated parser */
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"String":3,"String1":4,"String2":5,"QUOTE1":6,"StringAtoms":7,"QUOTE2":8,"StringAtom":9,"STRING_ATOM":10,"InnerExprAtom":11,"OuterExprAtom":12,"LABEL":13,"BraceExpr":14,"FunctionDeclaration":15,"InnerExprAtomList":16,"InnerExpr":17,"ParenExpr":18,"LPAREN":19,"RPAREN":20,"BracketExpr":21,"LBRACKET":22,"RBRACKET":23,"LBRACE":24,"RBRACE":25,"GENERIC":26,"COMMA":27,"COLON":28,"ID":29,"THIS":30,"Plege":31,"SlotAtom":32,"SlotAtomList":33,"Slot":34,"PROMISE":35,"SlotListOpt":36,"SlotList":37,"Expr":38,"ExprStatement":39,"SEMICOLON":40,"Statement":41,"Block":42,"ForStatement":43,"WhileStatement":44,"DoWhileStatement":45,"IfStatement":46,"AwaitStatement":47,"LabeledStatement":48,"ReturnStatement":49,"BreakStatement":50,"ContinueStatement":51,"SwitchStatement":52,"TryStatement":53,"WithStatement":54,"Label":55,"TRY":56,"CatchStatementOpt":57,"FinallyStatementOpt":58,"CATCH":59,"FINALLY":60,"RETURN":61,"CONTINUE":62,"IdOpt":63,"BREAK":64,"WITH":65,"SourceElements":66,"FOR":67,"ForIter":68,"DO":69,"WHILE":70,"SWITCH":71,"CaseBlock":72,"Case":73,"CaseLabel":74,"CaseBody":75,"DEFAULT":76,"CASE":77,"IF":78,"ELSE":79,"FUNCTION":80,"ParamListOpt":81,"AWAIT":82,"ParamList":83,"Param":84,"FunctionBody":85,"ShbangOpt":86,"SHBANG":87,"Program":88,"$accept":0,"$end":1},
terminals_: {2:"error",6:"QUOTE1",8:"QUOTE2",10:"STRING_ATOM",13:"LABEL",19:"LPAREN",20:"RPAREN",22:"LBRACKET",23:"RBRACKET",24:"LBRACE",25:"RBRACE",26:"GENERIC",27:"COMMA",28:"COLON",29:"ID",30:"THIS",35:"PROMISE",40:"SEMICOLON",45:"DoWhileStatement",56:"TRY",59:"CATCH",60:"FINALLY",61:"RETURN",62:"CONTINUE",64:"BREAK",65:"WITH",67:"FOR",69:"DO",70:"WHILE",71:"SWITCH",76:"DEFAULT",77:"CASE",78:"IF",79:"ELSE",80:"FUNCTION",82:"AWAIT",87:"SHBANG"},
productions_: [0,[3,1],[3,1],[4,3],[5,3],[9,1],[7,0],[7,2],[11,1],[11,1],[11,1],[11,1],[16,0],[16,2],[17,1],[18,3],[21,3],[14,3],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[33,1],[33,2],[34,1],[31,4],[36,0],[36,1],[37,1],[37,3],[38,0],[38,2],[39,2],[39,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[55,1],[48,2],[53,4],[57,0],[57,5],[58,0],[58,2],[49,3],[51,3],[50,3],[54,5],[42,3],[66,0],[66,2],[43,5],[44,6],[44,5],[52,7],[72,0],[72,2],[73,2],[74,2],[74,2],[74,3],[75,1],[46,5],[46,7],[68,5],[68,1],[15,6],[47,2],[63,0],[63,1],[83,1],[83,3],[84,1],[81,0],[81,1],[85,1],[86,0],[86,1],[88,2]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: this.$ = $$[$0]; 
break;
case 2: this.$ = $$[$0]; 
break;
case 3: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, "'" + $$[$0-1] + "'"); 
break;
case 4: this.$ = new yy.String (_$[$0-2].first_line, _$[$0].last_line, '"' + $$[$0-1] + '"'); 
break;
case 5: this.$ = yytext; 
break;
case 6: this.$ = ""; 
break;
case 7: this.$ = $$[$0-1] + $$[$0]; 
break;
case 8: this.$ = $$[$0]; 
break;
case 9: this.$ = [ new yy.Atom (_$[$0].first_line, yytext + " :")]; 
break;
case 10: this.$ = $$[$0]; 
break;
case 11: this.$ = [ $$[$0] ]; 
break;
case 12: this.$ = []; 
break;
case 13: this.$ = $$[$0-1].concat ($$[$0]); 
break;
case 14: this.$ = new yy.Expr ($$[$0]); 
break;
case 15: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '(') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, ')'));
	 this.$ = out;
     
break;
case 16: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '[') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, ']'));
	 this.$ = out;
     
break;
case 17: 
         var out = [ new yy.Atom (_$[$0-2].first_line, '{') ];
	 $$[$0-1].pushAtomsToArray (out);
	 out.push (new yy.Atom (_$[$0].first_line, '}'));
	 this.$ = out;
     
break;
case 18: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 19: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 20: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 21: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 22: this.$ = $$[$0]; 
break;
case 23: this.$ = $$[$0]; 
break;
case 24: this.$ = $$[$0]; 
break;
case 25: this.$ = [ new yy.ThisExpr (_$[$0].first_line) ]; 
break;
case 26: this.$ = [ $$[$0] ]; 
break;
case 27: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 28: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 29: this.$ = [ new yy.Atom (_$[$0].first_line, yytext) ]; 
break;
case 30: this.$ = $$[$0]; 
break;
case 31: this.$ = $$[$0]; 
break;
case 32: this.$ = $$[$0]; 
break;
case 33: this.$ = [ new yy.ThisExpr (_$[$0].first_line) ]; 
break;
case 34: this.$ = [ $$[$0] ]; 
break;
case 35: this.$ = [ new yy.Atom (_$[$0].first_line, yytext + " :")]; 
break;
case 36: this.$ = $$[$0]; 
break;
case 37: this.$ = [ $$[$0] ]; 
break;
case 38: this.$ = $$[$0]; 
break;
case 39: this.$ = $$[$0-1].concat ($$[$0]); 
break;
case 40: this.$ = new yy.Expr ($$[$0]);  
break;
case 41:
           this.$ = new yy.PlegeExpr (_$[$0-3].first_line, $$[$0-1]);
     
break;
case 42: this.$ = []; 
break;
case 43: this.$ = $$[$0]; 
break;
case 44: this.$ = [ $$[$0] ]; 
break;
case 45:
         $$[$0-2].push ($$[$0]);
         this.$ = $$[$0-2];
     
break;
case 46: this.$ = new yy.Expr ([]); 
break;
case 47:
	 var lst = $$[$0-1].concat ($$[$0]);
	 this.$ = new yy.Expr (lst);
     
break;
case 48: 
         $$[$0-1].addAtom (new yy.Atom (_$[$0].first_line, ";")); 
	 this.$ = $$[$0-1]; 
     
break;
case 49:
         this.$ = yy.Expr ([ $$[$0] ] );
     
break;
case 64: this.$ = new yy.Label (_$[$0].first_line, yytext); 
break;
case 65:
         $$[$0].setLabel ($$[$0-1]);
	 this.$ = $$[$0];
     
break;
case 66:
	  this.$ = new yy.TryStatement (_$[$0-3].first_line, $$[$0-2], $$[$0-1], $$[$0]);
     
break;
case 67: this.$ = null; 
break;
case 68:
         this.$ = new yy.CatchStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 69: this.$ = null; 
break;
case 70:
         this.$ = $$[$0];
     
break;
case 71:
         this.$ = new yy.ReturnStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 72:
         this.$ = new yy.ContinueStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 73:
         this.$ = new yy.BreakStatement (_$[$0-2].first_line, $$[$0-1]);
     
break;
case 74:
         this.$ = new yy.WithStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 75: this.$ = new yy.Block (_$[$0-2].first_line, $$[$0-1]); 
break;
case 76: this.$ = []; 
break;
case 77: $$[$0-1].push ($$[$0]); this.$ = $$[$0-1]; 
break;
case 78:
        this.$ = new yy.ForStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 79:
        this.$ = new yy.DoWhileStatement (_$[$0-5].first_line, $$[$0-1], $$[$0-4]);
     
break;
case 80:
        this.$ = new yy.WhileStatement (_$[$0-4].first_line, $$[$0-2], $$[$0]);
     
break;
case 81:
         this.$ = new yy.SwitchStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-1]);
     
break;
case 82: this.$ = []; 
break;
case 83:
         $$[$0-1].push ($$[$0]);
	 this.$ = $$[$0-1];
     
break;
case 84:
         $$[$0-1].addBody (_$[$0-1].first_line, $$[$0]);
	 this.$ = $$[$0-1];
     
break;
case 85: this.$ = yy.Case (_$[$0-1].first_line); 
break;
case 86: this.$ = yy.Case (_$[$0-1].first_line, $$[$0]); 
break;
case 87: this.$ = yy.Case (_$[$0-2].first_line, $$[$0-1]); 
break;
case 88: this.$ = $$[$0]; 
break;
case 89:
        this.$ = new yy.IfElseStatement (_$[$0-4].first_line, $$[$0-2], $$[$0], null);
     
break;
case 90:
        this.$ = new yy.IfElseStatement (_$[$0-6].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 91:
         this.$ = new yy.ForIterClassic ($$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 92:
         this.$ = new yy.ForIterEach ($$[$0]); 
     
break;
case 93:
         this.$ = new yy.FunctionDeclaration (_$[$0-5].first_line, $$[$0-4], $$[$0-2], $$[$0]);
     
break;
case 94:
        this.$ = new yy.AwaitStatement (_$[$0-1].first_line, $$[$0]);
     
break;
case 96: this.$ = yytext; 
break;
case 97: this.$ = [ $$[$0] ]; 
break;
case 98: $$[$0-2].push ($$[$0]); this.$ = $$[$0-2]; 
break;
case 99: this.$ = yytext; 
break;
case 100: this.$ = []; 
break;
case 103: this.$ = null; 
break;
case 104: this.$ = $$[$0]; 
break;
case 105: yy.output = new yy.Program ($$[$0-1], $$[$0]); 
break;
}
},
table: [{1:[2,103],6:[2,103],8:[2,103],13:[2,103],19:[2,103],22:[2,103],24:[2,103],26:[2,103],27:[2,103],28:[2,103],29:[2,103],30:[2,103],35:[2,103],40:[2,103],45:[2,103],56:[2,103],61:[2,103],62:[2,103],64:[2,103],65:[2,103],67:[2,103],69:[2,103],70:[2,103],71:[2,103],78:[2,103],80:[2,103],82:[2,103],86:2,87:[1,3],88:1},{1:[3]},{1:[2,76],6:[2,76],8:[2,76],13:[2,76],19:[2,76],22:[2,76],24:[2,76],26:[2,76],27:[2,76],28:[2,76],29:[2,76],30:[2,76],35:[2,76],40:[2,76],45:[2,76],56:[2,76],61:[2,76],62:[2,76],64:[2,76],65:[2,76],66:4,67:[2,76],69:[2,76],70:[2,76],71:[2,76],78:[2,76],80:[2,76],82:[2,76]},{1:[2,104],6:[2,104],8:[2,104],13:[2,104],19:[2,104],22:[2,104],24:[2,104],26:[2,104],27:[2,104],28:[2,104],29:[2,104],30:[2,104],35:[2,104],40:[2,104],45:[2,104],56:[2,104],61:[2,104],62:[2,104],64:[2,104],65:[2,104],67:[2,104],69:[2,104],70:[2,104],71:[2,104],78:[2,104],80:[2,104],82:[2,104]},{1:[2,105],3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:5,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{1:[2,77],6:[2,77],8:[2,77],13:[2,77],19:[2,77],22:[2,77],24:[2,77],25:[2,77],26:[2,77],27:[2,77],28:[2,77],29:[2,77],30:[2,77],35:[2,77],40:[2,77],45:[2,77],56:[2,77],61:[2,77],62:[2,77],64:[2,77],65:[2,77],67:[2,77],69:[2,77],70:[2,77],71:[2,77],76:[2,77],77:[2,77],78:[2,77],80:[2,77],82:[2,77]},{1:[2,50],6:[2,50],8:[2,50],13:[2,50],19:[2,50],22:[2,50],24:[2,50],25:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],30:[2,50],35:[2,50],40:[2,50],45:[2,50],56:[2,50],61:[2,50],62:[2,50],64:[2,50],65:[2,50],67:[2,50],69:[2,50],70:[2,50],71:[2,50],76:[2,50],77:[2,50],78:[2,50],79:[2,50],80:[2,50],82:[2,50]},{1:[2,51],6:[2,51],8:[2,51],13:[2,51],19:[2,51],22:[2,51],24:[2,51],25:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],30:[2,51],35:[2,51],40:[2,51],45:[2,51],56:[2,51],61:[2,51],62:[2,51],64:[2,51],65:[2,51],67:[2,51],69:[2,51],70:[2,51],71:[2,51],76:[2,51],77:[2,51],78:[2,51],79:[2,51],80:[2,51],82:[2,51]},{1:[2,52],6:[2,52],8:[2,52],13:[2,52],19:[2,52],22:[2,52],24:[2,52],25:[2,52],26:[2,52],27:[2,52],28:[2,52],29:[2,52],30:[2,52],35:[2,52],40:[2,52],45:[2,52],56:[2,52],61:[2,52],62:[2,52],64:[2,52],65:[2,52],67:[2,52],69:[2,52],70:[2,52],71:[2,52],76:[2,52],77:[2,52],78:[2,52],79:[2,52],80:[2,52],82:[2,52]},{1:[2,53],6:[2,53],8:[2,53],13:[2,53],19:[2,53],22:[2,53],24:[2,53],25:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],30:[2,53],35:[2,53],40:[2,53],45:[2,53],56:[2,53],61:[2,53],62:[2,53],64:[2,53],65:[2,53],67:[2,53],69:[2,53],70:[2,53],71:[2,53],76:[2,53],77:[2,53],78:[2,53],79:[2,53],80:[2,53],82:[2,53]},{1:[2,54],6:[2,54],8:[2,54],13:[2,54],19:[2,54],22:[2,54],24:[2,54],25:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],30:[2,54],35:[2,54],40:[2,54],45:[2,54],56:[2,54],61:[2,54],62:[2,54],64:[2,54],65:[2,54],67:[2,54],69:[2,54],70:[2,54],71:[2,54],76:[2,54],77:[2,54],78:[2,54],79:[2,54],80:[2,54],82:[2,54]},{1:[2,55],6:[2,55],8:[2,55],13:[2,55],19:[2,55],22:[2,55],24:[2,55],25:[2,55],26:[2,55],27:[2,55],28:[2,55],29:[2,55],30:[2,55],35:[2,55],40:[2,55],45:[2,55],56:[2,55],61:[2,55],62:[2,55],64:[2,55],65:[2,55],67:[2,55],69:[2,55],70:[2,55],71:[2,55],76:[2,55],77:[2,55],78:[2,55],79:[2,55],80:[2,55],82:[2,55]},{1:[2,56],6:[2,56],8:[2,56],13:[2,56],19:[2,56],22:[2,56],24:[2,56],25:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],30:[2,56],35:[2,56],40:[2,56],45:[2,56],56:[2,56],61:[2,56],62:[2,56],64:[2,56],65:[2,56],67:[2,56],69:[2,56],70:[2,56],71:[2,56],76:[2,56],77:[2,56],78:[2,56],79:[2,56],80:[2,56],82:[2,56]},{1:[2,57],6:[2,57],8:[2,57],13:[2,57],19:[2,57],22:[2,57],24:[2,57],25:[2,57],26:[2,57],27:[2,57],28:[2,57],29:[2,57],30:[2,57],35:[2,57],40:[2,57],45:[2,57],56:[2,57],61:[2,57],62:[2,57],64:[2,57],65:[2,57],67:[2,57],69:[2,57],70:[2,57],71:[2,57],76:[2,57],77:[2,57],78:[2,57],79:[2,57],80:[2,57],82:[2,57]},{1:[2,58],6:[2,58],8:[2,58],13:[2,58],19:[2,58],22:[2,58],24:[2,58],25:[2,58],26:[2,58],27:[2,58],28:[2,58],29:[2,58],30:[2,58],35:[2,58],40:[2,58],45:[2,58],56:[2,58],61:[2,58],62:[2,58],64:[2,58],65:[2,58],67:[2,58],69:[2,58],70:[2,58],71:[2,58],76:[2,58],77:[2,58],78:[2,58],79:[2,58],80:[2,58],82:[2,58]},{1:[2,59],6:[2,59],8:[2,59],13:[2,59],19:[2,59],22:[2,59],24:[2,59],25:[2,59],26:[2,59],27:[2,59],28:[2,59],29:[2,59],30:[2,59],35:[2,59],40:[2,59],45:[2,59],56:[2,59],61:[2,59],62:[2,59],64:[2,59],65:[2,59],67:[2,59],69:[2,59],70:[2,59],71:[2,59],76:[2,59],77:[2,59],78:[2,59],79:[2,59],80:[2,59],82:[2,59]},{1:[2,60],6:[2,60],8:[2,60],13:[2,60],19:[2,60],22:[2,60],24:[2,60],25:[2,60],26:[2,60],27:[2,60],28:[2,60],29:[2,60],30:[2,60],35:[2,60],40:[2,60],45:[2,60],56:[2,60],61:[2,60],62:[2,60],64:[2,60],65:[2,60],67:[2,60],69:[2,60],70:[2,60],71:[2,60],76:[2,60],77:[2,60],78:[2,60],79:[2,60],80:[2,60],82:[2,60]},{1:[2,61],6:[2,61],8:[2,61],13:[2,61],19:[2,61],22:[2,61],24:[2,61],25:[2,61],26:[2,61],27:[2,61],28:[2,61],29:[2,61],30:[2,61],35:[2,61],40:[2,61],45:[2,61],56:[2,61],61:[2,61],62:[2,61],64:[2,61],65:[2,61],67:[2,61],69:[2,61],70:[2,61],71:[2,61],76:[2,61],77:[2,61],78:[2,61],79:[2,61],80:[2,61],82:[2,61]},{1:[2,62],6:[2,62],8:[2,62],13:[2,62],19:[2,62],22:[2,62],24:[2,62],25:[2,62],26:[2,62],27:[2,62],28:[2,62],29:[2,62],30:[2,62],35:[2,62],40:[2,62],45:[2,62],56:[2,62],61:[2,62],62:[2,62],64:[2,62],65:[2,62],67:[2,62],69:[2,62],70:[2,62],71:[2,62],76:[2,62],77:[2,62],78:[2,62],79:[2,62],80:[2,62],82:[2,62]},{1:[2,63],6:[2,63],8:[2,63],13:[2,63],19:[2,63],22:[2,63],24:[2,63],25:[2,63],26:[2,63],27:[2,63],28:[2,63],29:[2,63],30:[2,63],35:[2,63],40:[2,63],45:[2,63],56:[2,63],61:[2,63],62:[2,63],64:[2,63],65:[2,63],67:[2,63],69:[2,63],70:[2,63],71:[2,63],76:[2,63],77:[2,63],78:[2,63],79:[2,63],80:[2,63],82:[2,63]},{6:[2,76],8:[2,76],13:[2,76],19:[2,76],22:[2,76],24:[2,76],25:[2,76],26:[2,76],27:[2,76],28:[2,76],29:[2,76],30:[2,76],35:[2,76],40:[2,76],45:[2,76],56:[2,76],61:[2,76],62:[2,76],64:[2,76],65:[2,76],66:54,67:[2,76],69:[2,76],70:[2,76],71:[2,76],78:[2,76],80:[2,76],82:[2,76]},{40:[1,55]},{1:[2,49],6:[2,49],8:[2,49],13:[2,49],19:[2,49],22:[2,49],24:[2,49],25:[2,49],26:[2,49],27:[2,49],28:[2,49],29:[2,49],30:[2,49],35:[2,49],40:[2,49],45:[2,49],56:[2,49],61:[2,49],62:[2,49],64:[2,49],65:[2,49],67:[2,49],69:[2,49],70:[2,49],71:[2,49],76:[2,49],77:[2,49],78:[2,49],79:[2,49],80:[2,49],82:[2,49]},{19:[1,56]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:57,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{19:[1,58]},{19:[1,59]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:60,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:61,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{6:[2,12],8:[2,12],13:[2,12],16:63,17:62,19:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],35:[2,12],40:[2,12],80:[2,12]},{29:[1,65],40:[2,95],63:64},{29:[1,65],40:[2,95],63:66},{19:[1,67]},{24:[1,20],42:68},{19:[1,69]},{6:[2,12],8:[2,12],13:[2,12],16:70,19:[2,12],20:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],35:[2,12],40:[2,12],80:[2,12]},{19:[2,95],29:[1,65],63:71},{6:[2,64],8:[2,64],13:[2,64],19:[2,64],22:[2,64],24:[2,64],26:[2,64],27:[2,64],28:[2,64],29:[2,64],30:[2,64],35:[2,64],40:[2,64],45:[2,64],56:[2,64],61:[2,64],62:[2,64],64:[2,64],65:[2,64],67:[2,64],69:[2,64],70:[2,64],71:[2,64],78:[2,64],80:[2,64],82:[2,64]},{6:[2,18],8:[2,18],13:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],24:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],30:[2,18],35:[2,18],40:[2,18],80:[2,18]},{6:[2,19],8:[2,19],13:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],24:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],30:[2,19],35:[2,19],40:[2,19],80:[2,19]},{6:[2,20],8:[2,20],13:[2,20],19:[2,20],20:[2,20],22:[2,20],23:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],30:[2,20],35:[2,20],40:[2,20],80:[2,20]},{6:[2,21],8:[2,21],13:[2,21],19:[2,21],20:[2,21],22:[2,21],23:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],30:[2,21],35:[2,21],40:[2,21],80:[2,21]},{6:[2,22],8:[2,22],13:[2,22],19:[2,22],20:[2,22],22:[2,22],23:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],30:[2,22],35:[2,22],40:[2,22],80:[2,22]},{6:[2,23],8:[2,23],13:[2,23],19:[2,23],20:[2,23],22:[2,23],23:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],30:[2,23],35:[2,23],40:[2,23],80:[2,23]},{6:[2,24],8:[2,24],13:[2,24],19:[2,24],20:[2,24],22:[2,24],23:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],30:[2,24],35:[2,24],40:[2,24],80:[2,24]},{6:[2,25],8:[2,25],13:[2,25],19:[2,25],20:[2,25],22:[2,25],23:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],30:[2,25],35:[2,25],40:[2,25],80:[2,25]},{6:[2,26],8:[2,26],13:[2,26],19:[2,26],20:[2,26],22:[2,26],23:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],30:[2,26],35:[2,26],40:[2,26],80:[2,26]},{6:[2,1],8:[2,1],13:[2,1],19:[2,1],20:[2,1],22:[2,1],23:[2,1],24:[2,1],25:[2,1],26:[2,1],27:[2,1],28:[2,1],29:[2,1],30:[2,1],35:[2,1],40:[2,1],80:[2,1]},{6:[2,2],8:[2,2],13:[2,2],19:[2,2],20:[2,2],22:[2,2],23:[2,2],24:[2,2],25:[2,2],26:[2,2],27:[2,2],28:[2,2],29:[2,2],30:[2,2],35:[2,2],40:[2,2],80:[2,2]},{6:[2,12],8:[2,12],13:[2,12],16:63,17:72,19:[2,12],20:[2,12],22:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],35:[2,12],80:[2,12]},{6:[2,12],8:[2,12],13:[2,12],16:63,17:73,19:[2,12],22:[2,12],23:[2,12],24:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],35:[2,12],80:[2,12]},{19:[1,74]},{6:[2,6],7:75,10:[2,6]},{7:76,8:[2,6],10:[2,6]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],25:[1,77],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:5,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{1:[2,48],6:[2,48],8:[2,48],13:[2,48],19:[2,48],22:[2,48],24:[2,48],25:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],30:[2,48],35:[2,48],40:[2,48],45:[2,48],56:[2,48],61:[2,48],62:[2,48],64:[2,48],65:[2,48],67:[2,48],69:[2,48],70:[2,48],71:[2,48],76:[2,48],77:[2,48],78:[2,48],79:[2,48],80:[2,48],82:[2,48]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:79,40:[2,46],68:78},{70:[1,80]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:81},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:82},{1:[2,94],6:[2,94],8:[2,94],13:[2,94],19:[2,94],22:[2,94],24:[2,94],25:[2,94],26:[2,94],27:[2,94],28:[2,94],29:[2,94],30:[2,94],35:[2,94],40:[2,94],45:[2,94],56:[2,94],61:[2,94],62:[2,94],64:[2,94],65:[2,94],67:[2,94],69:[2,94],70:[2,94],71:[2,94],76:[2,94],77:[2,94],78:[2,94],79:[2,94],80:[2,94],82:[2,94]},{1:[2,65],6:[2,65],8:[2,65],13:[2,65],19:[2,65],22:[2,65],24:[2,65],25:[2,65],26:[2,65],27:[2,65],28:[2,65],29:[2,65],30:[2,65],35:[2,65],40:[2,65],45:[2,65],56:[2,65],61:[2,65],62:[2,65],64:[2,65],65:[2,65],67:[2,65],69:[2,65],70:[2,65],71:[2,65],76:[2,65],77:[2,65],78:[2,65],79:[2,65],80:[2,65],82:[2,65]},{40:[1,83]},{3:42,4:47,5:48,6:[1,52],8:[1,53],11:84,12:85,13:[1,86],14:87,15:88,18:43,19:[1,49],20:[2,14],21:44,22:[1,50],23:[2,14],24:[1,89],25:[2,14],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],40:[2,14],80:[1,36]},{40:[1,90]},{19:[2,96],40:[2,96]},{40:[1,91]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:92},{1:[2,67],6:[2,67],8:[2,67],13:[2,67],19:[2,67],22:[2,67],24:[2,67],25:[2,67],26:[2,67],27:[2,67],28:[2,67],29:[2,67],30:[2,67],35:[2,67],40:[2,67],45:[2,67],56:[2,67],57:93,59:[1,94],60:[2,67],61:[2,67],62:[2,67],64:[2,67],65:[2,67],67:[2,67],69:[2,67],70:[2,67],71:[2,67],76:[2,67],77:[2,67],78:[2,67],79:[2,67],80:[2,67],82:[2,67]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:95},{3:42,4:47,5:48,6:[1,52],8:[1,53],11:84,12:85,13:[1,86],14:87,15:88,18:43,19:[1,49],20:[2,47],21:44,22:[1,50],24:[1,89],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],40:[2,47],80:[1,36]},{19:[1,96]},{20:[1,97]},{23:[1,98]},{3:107,4:47,5:48,6:[1,52],8:[1,53],13:[1,112],14:113,15:114,18:108,19:[1,49],20:[2,42],21:109,22:[1,50],24:[1,89],26:[1,104],28:[1,105],29:[1,106],30:[1,110],31:111,32:103,33:102,34:101,35:[1,51],36:99,37:100,80:[1,36]},{6:[1,115],10:[1,116]},{8:[1,117],10:[1,116]},{1:[2,75],6:[2,75],8:[2,75],13:[2,75],19:[2,75],20:[2,75],22:[2,75],23:[2,75],24:[2,75],25:[2,75],26:[2,75],27:[2,75],28:[2,75],29:[2,75],30:[2,75],35:[2,75],40:[2,75],45:[2,75],56:[2,75],59:[2,75],60:[2,75],61:[2,75],62:[2,75],64:[2,75],65:[2,75],67:[2,75],69:[2,75],70:[2,75],71:[2,75],76:[2,75],77:[2,75],78:[2,75],79:[2,75],80:[2,75],82:[2,75]},{20:[1,118]},{20:[2,92],40:[1,119]},{19:[1,120]},{20:[1,121]},{20:[1,122]},{1:[2,71],6:[2,71],8:[2,71],13:[2,71],19:[2,71],22:[2,71],24:[2,71],25:[2,71],26:[2,71],27:[2,71],28:[2,71],29:[2,71],30:[2,71],35:[2,71],40:[2,71],45:[2,71],56:[2,71],61:[2,71],62:[2,71],64:[2,71],65:[2,71],67:[2,71],69:[2,71],70:[2,71],71:[2,71],76:[2,71],77:[2,71],78:[2,71],79:[2,71],80:[2,71],82:[2,71]},{6:[2,13],8:[2,13],13:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],24:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],30:[2,13],35:[2,13],40:[2,13],80:[2,13]},{6:[2,8],8:[2,8],13:[2,8],19:[2,8],20:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],30:[2,8],35:[2,8],40:[2,8],80:[2,8]},{6:[2,9],8:[2,9],13:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],24:[2,9],25:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9],30:[2,9],35:[2,9],40:[2,9],80:[2,9]},{6:[2,10],8:[2,10],13:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],24:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],30:[2,10],35:[2,10],40:[2,10],80:[2,10]},{6:[2,11],8:[2,11],13:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],24:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],30:[2,11],35:[2,11],40:[2,11],80:[2,11]},{6:[2,12],8:[2,12],13:[2,12],16:63,17:123,19:[2,12],22:[2,12],24:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],35:[2,12],80:[2,12]},{1:[2,73],6:[2,73],8:[2,73],13:[2,73],19:[2,73],22:[2,73],24:[2,73],25:[2,73],26:[2,73],27:[2,73],28:[2,73],29:[2,73],30:[2,73],35:[2,73],40:[2,73],45:[2,73],56:[2,73],61:[2,73],62:[2,73],64:[2,73],65:[2,73],67:[2,73],69:[2,73],70:[2,73],71:[2,73],76:[2,73],77:[2,73],78:[2,73],79:[2,73],80:[2,73],82:[2,73]},{1:[2,72],6:[2,72],8:[2,72],13:[2,72],19:[2,72],22:[2,72],24:[2,72],25:[2,72],26:[2,72],27:[2,72],28:[2,72],29:[2,72],30:[2,72],35:[2,72],40:[2,72],45:[2,72],56:[2,72],61:[2,72],62:[2,72],64:[2,72],65:[2,72],67:[2,72],69:[2,72],70:[2,72],71:[2,72],76:[2,72],77:[2,72],78:[2,72],79:[2,72],80:[2,72],82:[2,72]},{20:[1,124]},{1:[2,69],6:[2,69],8:[2,69],13:[2,69],19:[2,69],22:[2,69],24:[2,69],25:[2,69],26:[2,69],27:[2,69],28:[2,69],29:[2,69],30:[2,69],35:[2,69],40:[2,69],45:[2,69],56:[2,69],58:125,60:[1,126],61:[2,69],62:[2,69],64:[2,69],65:[2,69],67:[2,69],69:[2,69],70:[2,69],71:[2,69],76:[2,69],77:[2,69],78:[2,69],79:[2,69],80:[2,69],82:[2,69]},{19:[1,127]},{20:[1,128]},{20:[2,100],29:[1,132],81:129,83:130,84:131},{6:[2,15],8:[2,15],13:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],24:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],30:[2,15],35:[2,15],40:[2,15],80:[2,15]},{6:[2,16],8:[2,16],13:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],24:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],30:[2,16],35:[2,16],40:[2,16],80:[2,16]},{20:[1,133]},{20:[2,43],27:[1,134]},{20:[2,44],27:[2,44]},{3:107,4:47,5:48,6:[1,52],8:[1,53],13:[1,112],14:113,15:114,18:108,19:[1,49],20:[2,40],21:109,22:[1,50],24:[1,89],26:[1,104],27:[2,40],28:[1,105],29:[1,106],30:[1,110],31:111,32:135,35:[1,51],80:[1,36]},{6:[2,38],8:[2,38],13:[2,38],19:[2,38],20:[2,38],22:[2,38],24:[2,38],26:[2,38],27:[2,38],28:[2,38],29:[2,38],30:[2,38],35:[2,38],80:[2,38]},{6:[2,27],8:[2,27],13:[2,27],19:[2,27],20:[2,27],22:[2,27],24:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],30:[2,27],35:[2,27],80:[2,27]},{6:[2,28],8:[2,28],13:[2,28],19:[2,28],20:[2,28],22:[2,28],24:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],30:[2,28],35:[2,28],80:[2,28]},{6:[2,29],8:[2,29],13:[2,29],19:[2,29],20:[2,29],22:[2,29],24:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],30:[2,29],35:[2,29],80:[2,29]},{6:[2,30],8:[2,30],13:[2,30],19:[2,30],20:[2,30],22:[2,30],24:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],30:[2,30],35:[2,30],80:[2,30]},{6:[2,31],8:[2,31],13:[2,31],19:[2,31],20:[2,31],22:[2,31],24:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],30:[2,31],35:[2,31],80:[2,31]},{6:[2,32],8:[2,32],13:[2,32],19:[2,32],20:[2,32],22:[2,32],24:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],30:[2,32],35:[2,32],80:[2,32]},{6:[2,33],8:[2,33],13:[2,33],19:[2,33],20:[2,33],22:[2,33],24:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],30:[2,33],35:[2,33],80:[2,33]},{6:[2,34],8:[2,34],13:[2,34],19:[2,34],20:[2,34],22:[2,34],24:[2,34],26:[2,34],27:[2,34],28:[2,34],29:[2,34],30:[2,34],35:[2,34],80:[2,34]},{6:[2,35],8:[2,35],13:[2,35],19:[2,35],20:[2,35],22:[2,35],24:[2,35],26:[2,35],27:[2,35],28:[2,35],29:[2,35],30:[2,35],35:[2,35],80:[2,35]},{6:[2,36],8:[2,36],13:[2,36],19:[2,36],20:[2,36],22:[2,36],24:[2,36],26:[2,36],27:[2,36],28:[2,36],29:[2,36],30:[2,36],35:[2,36],80:[2,36]},{6:[2,37],8:[2,37],13:[2,37],19:[2,37],20:[2,37],22:[2,37],24:[2,37],26:[2,37],27:[2,37],28:[2,37],29:[2,37],30:[2,37],35:[2,37],80:[2,37]},{6:[2,3],8:[2,3],13:[2,3],19:[2,3],20:[2,3],22:[2,3],23:[2,3],24:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],30:[2,3],35:[2,3],40:[2,3],80:[2,3]},{6:[2,7],8:[2,7],10:[2,7]},{6:[2,4],8:[2,4],13:[2,4],19:[2,4],20:[2,4],22:[2,4],23:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],30:[2,4],35:[2,4],40:[2,4],80:[2,4]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:136,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:137,40:[2,46]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:138},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:139,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:140,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{25:[1,141]},{24:[1,142]},{1:[2,66],6:[2,66],8:[2,66],13:[2,66],19:[2,66],22:[2,66],24:[2,66],25:[2,66],26:[2,66],27:[2,66],28:[2,66],29:[2,66],30:[2,66],35:[2,66],40:[2,66],45:[2,66],56:[2,66],61:[2,66],62:[2,66],64:[2,66],65:[2,66],67:[2,66],69:[2,66],70:[2,66],71:[2,66],76:[2,66],77:[2,66],78:[2,66],79:[2,66],80:[2,66],82:[2,66]},{24:[1,20],42:143},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:144},{24:[1,20],42:145},{20:[1,146]},{20:[2,101],27:[1,147]},{20:[2,97],27:[2,97]},{20:[2,99],27:[2,99]},{6:[2,41],8:[2,41],13:[2,41],19:[2,41],20:[2,41],22:[2,41],23:[2,41],24:[2,41],25:[2,41],26:[2,41],27:[2,41],28:[2,41],29:[2,41],30:[2,41],35:[2,41],40:[2,41],80:[2,41]},{3:107,4:47,5:48,6:[1,52],8:[1,53],13:[1,112],14:113,15:114,18:108,19:[1,49],21:109,22:[1,50],24:[1,89],26:[1,104],28:[1,105],29:[1,106],30:[1,110],31:111,32:103,33:102,34:148,35:[1,51],80:[1,36]},{6:[2,39],8:[2,39],13:[2,39],19:[2,39],20:[2,39],22:[2,39],24:[2,39],26:[2,39],27:[2,39],28:[2,39],29:[2,39],30:[2,39],35:[2,39],80:[2,39]},{1:[2,78],6:[2,78],8:[2,78],13:[2,78],19:[2,78],22:[2,78],24:[2,78],25:[2,78],26:[2,78],27:[2,78],28:[2,78],29:[2,78],30:[2,78],35:[2,78],40:[2,78],45:[2,78],56:[2,78],61:[2,78],62:[2,78],64:[2,78],65:[2,78],67:[2,78],69:[2,78],70:[2,78],71:[2,78],76:[2,78],77:[2,78],78:[2,78],79:[2,78],80:[2,78],82:[2,78]},{40:[1,149]},{20:[1,150]},{1:[2,80],6:[2,80],8:[2,80],13:[2,80],19:[2,80],22:[2,80],24:[2,80],25:[2,80],26:[2,80],27:[2,80],28:[2,80],29:[2,80],30:[2,80],35:[2,80],40:[2,80],45:[2,80],56:[2,80],61:[2,80],62:[2,80],64:[2,80],65:[2,80],67:[2,80],69:[2,80],70:[2,80],71:[2,80],76:[2,80],77:[2,80],78:[2,80],79:[2,80],80:[2,80],82:[2,80]},{1:[2,89],6:[2,89],8:[2,89],13:[2,89],19:[2,89],22:[2,89],24:[2,89],25:[2,89],26:[2,89],27:[2,89],28:[2,89],29:[2,89],30:[2,89],35:[2,89],40:[2,89],45:[2,89],56:[2,89],61:[2,89],62:[2,89],64:[2,89],65:[2,89],67:[2,89],69:[2,89],70:[2,89],71:[2,89],76:[2,89],77:[2,89],78:[2,89],79:[1,151],80:[2,89],82:[2,89]},{6:[2,17],8:[2,17],13:[2,17],19:[2,17],20:[2,17],22:[2,17],23:[2,17],24:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],30:[2,17],35:[2,17],40:[2,17],80:[2,17]},{25:[2,82],72:152,76:[2,82],77:[2,82]},{1:[2,70],6:[2,70],8:[2,70],13:[2,70],19:[2,70],22:[2,70],24:[2,70],25:[2,70],26:[2,70],27:[2,70],28:[2,70],29:[2,70],30:[2,70],35:[2,70],40:[2,70],45:[2,70],56:[2,70],61:[2,70],62:[2,70],64:[2,70],65:[2,70],67:[2,70],69:[2,70],70:[2,70],71:[2,70],76:[2,70],77:[2,70],78:[2,70],79:[2,70],80:[2,70],82:[2,70]},{20:[1,153]},{1:[2,74],6:[2,74],8:[2,74],13:[2,74],19:[2,74],22:[2,74],24:[2,74],25:[2,74],26:[2,74],27:[2,74],28:[2,74],29:[2,74],30:[2,74],35:[2,74],40:[2,74],45:[2,74],56:[2,74],61:[2,74],62:[2,74],64:[2,74],65:[2,74],67:[2,74],69:[2,74],70:[2,74],71:[2,74],76:[2,74],77:[2,74],78:[2,74],79:[2,74],80:[2,74],82:[2,74]},{24:[1,20],42:154},{29:[1,132],84:155},{20:[2,45],27:[2,45]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,18:43,19:[1,49],20:[2,46],21:44,22:[1,50],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:156},{1:[2,79],6:[2,79],8:[2,79],13:[2,79],19:[2,79],22:[2,79],24:[2,79],25:[2,79],26:[2,79],27:[2,79],28:[2,79],29:[2,79],30:[2,79],35:[2,79],40:[2,79],45:[2,79],56:[2,79],61:[2,79],62:[2,79],64:[2,79],65:[2,79],67:[2,79],69:[2,79],70:[2,79],71:[2,79],76:[2,79],77:[2,79],78:[2,79],79:[2,79],80:[2,79],82:[2,79]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:157,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],78:[1,26],80:[1,36],82:[1,27]},{25:[1,158],73:159,74:160,76:[1,161],77:[1,162]},{24:[1,20],42:163},{1:[2,93],6:[2,93],8:[2,93],13:[2,93],19:[2,93],20:[2,93],22:[2,93],23:[2,93],24:[2,93],25:[2,93],26:[2,93],27:[2,93],28:[2,93],29:[2,93],30:[2,93],35:[2,93],40:[2,93],45:[2,93],56:[2,93],61:[2,93],62:[2,93],64:[2,93],65:[2,93],67:[2,93],69:[2,93],70:[2,93],71:[2,93],76:[2,93],77:[2,93],78:[2,93],79:[2,93],80:[2,93],82:[2,93]},{20:[2,98],27:[2,98]},{20:[2,91]},{1:[2,90],6:[2,90],8:[2,90],13:[2,90],19:[2,90],22:[2,90],24:[2,90],25:[2,90],26:[2,90],27:[2,90],28:[2,90],29:[2,90],30:[2,90],35:[2,90],40:[2,90],45:[2,90],56:[2,90],61:[2,90],62:[2,90],64:[2,90],65:[2,90],67:[2,90],69:[2,90],70:[2,90],71:[2,90],76:[2,90],77:[2,90],78:[2,90],79:[2,90],80:[2,90],82:[2,90]},{1:[2,81],6:[2,81],8:[2,81],13:[2,81],19:[2,81],22:[2,81],24:[2,81],25:[2,81],26:[2,81],27:[2,81],28:[2,81],29:[2,81],30:[2,81],35:[2,81],40:[2,81],45:[2,81],56:[2,81],61:[2,81],62:[2,81],64:[2,81],65:[2,81],67:[2,81],69:[2,81],70:[2,81],71:[2,81],76:[2,81],77:[2,81],78:[2,81],79:[2,81],80:[2,81],82:[2,81]},{25:[2,83],76:[2,83],77:[2,83]},{6:[2,76],8:[2,76],13:[2,76],19:[2,76],22:[2,76],24:[2,76],25:[2,76],26:[2,76],27:[2,76],28:[2,76],29:[2,76],30:[2,76],35:[2,76],40:[2,76],45:[2,76],56:[2,76],61:[2,76],62:[2,76],64:[2,76],65:[2,76],66:165,67:[2,76],69:[2,76],70:[2,76],71:[2,76],75:164,76:[2,76],77:[2,76],78:[2,76],80:[2,76],82:[2,76]},{28:[1,166]},{3:168,4:47,5:48,6:[1,52],8:[1,53],13:[1,167]},{1:[2,68],6:[2,68],8:[2,68],13:[2,68],19:[2,68],22:[2,68],24:[2,68],25:[2,68],26:[2,68],27:[2,68],28:[2,68],29:[2,68],30:[2,68],35:[2,68],40:[2,68],45:[2,68],56:[2,68],60:[2,68],61:[2,68],62:[2,68],64:[2,68],65:[2,68],67:[2,68],69:[2,68],70:[2,68],71:[2,68],76:[2,68],77:[2,68],78:[2,68],79:[2,68],80:[2,68],82:[2,68]},{25:[2,84],76:[2,84],77:[2,84]},{3:42,4:47,5:48,6:[1,52],8:[1,53],12:35,13:[1,37],15:22,18:43,19:[1,49],21:44,22:[1,50],24:[1,20],25:[2,88],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,45],31:46,35:[1,51],38:21,39:7,40:[2,46],41:5,42:6,43:8,44:9,45:[1,10],46:11,47:12,48:13,49:14,50:15,51:16,52:17,53:18,54:19,55:28,56:[1,33],61:[1,29],62:[1,31],64:[1,30],65:[1,34],67:[1,23],69:[1,24],70:[1,25],71:[1,32],76:[2,88],77:[2,88],78:[1,26],80:[1,36],82:[1,27]},{6:[2,85],8:[2,85],13:[2,85],19:[2,85],22:[2,85],24:[2,85],25:[2,85],26:[2,85],27:[2,85],28:[2,85],29:[2,85],30:[2,85],35:[2,85],40:[2,85],45:[2,85],56:[2,85],61:[2,85],62:[2,85],64:[2,85],65:[2,85],67:[2,85],69:[2,85],70:[2,85],71:[2,85],76:[2,85],77:[2,85],78:[2,85],80:[2,85],82:[2,85]},{6:[2,86],8:[2,86],13:[2,86],19:[2,86],22:[2,86],24:[2,86],25:[2,86],26:[2,86],27:[2,86],28:[2,86],29:[2,86],30:[2,86],35:[2,86],40:[2,86],45:[2,86],56:[2,86],61:[2,86],62:[2,86],64:[2,86],65:[2,86],67:[2,86],69:[2,86],70:[2,86],71:[2,86],76:[2,86],77:[2,86],78:[2,86],80:[2,86],82:[2,86]},{28:[1,169]},{6:[2,87],8:[2,87],13:[2,87],19:[2,87],22:[2,87],24:[2,87],25:[2,87],26:[2,87],27:[2,87],28:[2,87],29:[2,87],30:[2,87],35:[2,87],40:[2,87],45:[2,87],56:[2,87],61:[2,87],62:[2,87],64:[2,87],65:[2,87],67:[2,87],69:[2,87],70:[2,87],71:[2,87],76:[2,87],77:[2,87],78:[2,87],80:[2,87],82:[2,87]}],
defaultActions: {156:[2,91]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};/* Jison generated lexer */
var lexer = (function(){var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parseError) {
            this.yy.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext+=ch;
        this.yyleng++;
        this.match+=ch;
        this.matched+=ch;
        var lines = ch.match(/\n/);
        if (lines) this.yylineno++;
        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        this._input = ch + this._input;
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            match = this._input.match(this.rules[rules[i]]);
            if (match) {
                lines = match[0].match(/\n.*/g);
                if (lines) this.yylineno += lines.length;
                this.yylloc = {first_line: this.yylloc.last_line,
                               last_line: this.yylineno+1,
                               first_column: this.yylloc.last_column,
                               last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                this._more = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, rules[i],this.conditionStack[this.conditionStack.length-1]);
                if (token) return token;
                else return;
            }
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(), 
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    }});
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:/* skip over C++-style comments */
break;
case 1:/* skip space */
break;
case 2:return 67;
break;
case 3:return 70; 
break;
case 4:return 64;
break;
case 5:return 62;
break;
case 6:return 61;
break;
case 7:return 69;
break;
case 8:return 78;
break;
case 9:return 79;
break;
case 10:return 56;
break;
case 11:return 59;
break;
case 12:return 82;
break;
case 13:return 80;
break;
case 14:return 35;
break;
case 15:return 60;
break;
case 16:return 77;
break;
case 17:return 71;
break;
case 18:return 76;
break;
case 19:return 30;
break;
case 20:return 65;
break;
case 21:return 87; 
break;
case 22: 
                                   yy_.yytext = yy_.yytext.replace (/[\s:]/g, ""); 
				   return 13; 
                              
break;
case 23: return 29; 
break;
case 24:return 24;
break;
case 25:return 25;
break;
case 26:return 19;
break;
case 27:return 20;
break;
case 28:return 22;
break;
case 29:return 23;
break;
case 30:return "SEMICOLON";
break;
case 31:return 27;
break;
case 32:return 28;
break;
case 33: this.begin ('ST_QUOTE2'); return 8; 
break;
case 34: this.begin ('ST_QUOTE1'); return 6; 
break;
case 35: this.begin ('ST_COMMENT'); 
break;
case 36:return 26;
break;
case 37:return 26;
break;
case 38:return 10;
break;
case 39:return 10;
break;
case 40: this.popState (); return "QUOTE2"; 
break;
case 41:return 'ENDOFFILE';
break;
case 42:return 10;
break;
case 43:return 10;
break;
case 44: this.popState (); return "QUOTE1"; 
break;
case 45:return 'ENDOFFILE';
break;
case 46: this.popState(); 
break;
case 47:/* ignore */
break;
case 48:/* ignore */
break;
case 49:return 'ENDOFFILE';
break;
}
};
lexer.rules = [/^\/\/.*/,/^\s+/,/^for\b/,/^while\b/,/^break\b/,/^continue\b/,/^return\b/,/^do\b/,/^if\b/,/^else\b/,/^try\b/,/^catch\b/,/^await\b/,/^function\b/,/^pledge\b/,/^finally\b/,/^case\b/,/^switch\b/,/^default\b/,/^this\b/,/^with\b/,/^#![ ]*[/].*/,/^[a-zA-Z_0-9]+[ ^]*[:]/,/^[a-zA-Z_][a-zA-Z_0-9]*/,/^\{/,/^\}/,/^\(/,/^\)/,/^\[/,/^\]/,/^;/,/^,/,/^:/,/^"/,/^'/,/^\/\*/,/^[^/{}()\[\];,:"'\s]+/,/^./,/^\\./,/^[^\\"]+/,/^"/,/^$/,/^\\./,/^[^\\']+/,/^'/,/^$/,/^\*\//,/^\*/,/^[^*]+/,/^$/];
lexer.conditions = {"ST_QUOTE2":{"rules":[38,39,40,41],"inclusive":true},"ST_QUOTE1":{"rules":[42,43,44,45],"inclusive":true},"ST_COMMENT":{"rules":[46,47,48,49],"inclusive":true},"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"inclusive":true}};return lexer;})()
parser.lexer = lexer;
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}